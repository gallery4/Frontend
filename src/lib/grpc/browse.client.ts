// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "browse.proto" (package "browse", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Browse } from "./browse";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListResponse } from "./browse";
import type { ListRequest } from "./browse";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service browse.Browse
 */
export interface IBrowseClient {
    /**
     * @generated from protobuf rpc: List
     */
    list(input: ListRequest, options?: RpcOptions): UnaryCall<ListRequest, ListResponse>;
}
/**
 * @generated from protobuf service browse.Browse
 */
export class BrowseClient implements IBrowseClient, ServiceInfo {
    typeName = Browse.typeName;
    methods = Browse.methods;
    options = Browse.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: List
     */
    list(input: ListRequest, options?: RpcOptions): UnaryCall<ListRequest, ListResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRequest, ListResponse>("unary", this._transport, method, opt, input);
    }
}
