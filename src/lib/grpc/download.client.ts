// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "download.proto" (package "download", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Download } from "./download";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { DownloadStreamResponse } from "./download";
import type { GetRequest } from "./download";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service download.Download
 */
export interface IDownloadClient {
    /**
     * @generated from protobuf rpc: Get
     */
    get(input: GetRequest, options?: RpcOptions): ServerStreamingCall<GetRequest, DownloadStreamResponse>;
}
/**
 * @generated from protobuf service download.Download
 */
export class DownloadClient implements IDownloadClient, ServiceInfo {
    typeName = Download.typeName;
    methods = Download.methods;
    options = Download.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Get
     */
    get(input: GetRequest, options?: RpcOptions): ServerStreamingCall<GetRequest, DownloadStreamResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetRequest, DownloadStreamResponse>("serverStreaming", this._transport, method, opt, input);
    }
}
